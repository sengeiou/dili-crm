<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.sysadmin.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.dili.sysadmin.domain.Role">
		<!-- WARNING - @mbg.generated -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="role_name" jdbcType="VARCHAR" property="roleName" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="created" jdbcType="TIMESTAMP" property="created" />
		<result column="modified" jdbcType="TIMESTAMP" property="modified" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated -->
		id, role_name, description, created, modified
	</sql>
	<select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated -->
		select
		<include refid="Base_Column_List" />
		from role
		where id = #{id,jdbcType=BIGINT}
	</select>
	<update id="updateBy" parameterType="com.dili.sysadmin.domain.Role">
		<!-- WARNING - @mbg.generated -->
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="findByUserId" parameterType="Long" resultMap="BaseResultMap">
		<![CDATA[
		SELECT
		    r.id
		    ,r.role_name
		    ,r.description
		    ,r.created
		    ,r.modified
		FROM role r
		left join  user_role ru on ru.role_id = r.id
		WHERE
		 1 = 1
		and ru.user_id=#{pk}		
		]]>
	</select>

	<select id="findByMenuId" parameterType="Long" resultMap="BaseResultMap">
        <![CDATA[
		SELECT
		    sr.id
		    ,sr.role_name
		    ,sr.description
		    ,sr.created
		    ,sr.modified
		FROM role sr
		LEFT JOIN role_menu srm on sr.id = srm.role_id
		WHERE srm.menu_id=#{pk}
		]]>
	</select>

	<insert id="saveRoleMenu" parameterType="map">
		<selectKey keyProperty="id" resultType="long" order="AFTER">
			SELECT
			LAST_INSERT_ID();
		</selectKey>
		INSERT INTO role_menu(
		role_id
		, menu_id
		) VALUES (
		#{roleId}
		, #{menuId}
		)
	</insert>

	<delete id="roleResourceBatchDelete" parameterType="map">
    	<![CDATA[
        delete from 
        	role_permission
        where 
        	role_id = #{roleId} and
        ]]>
		resource_id in (
		<foreach collection="resourceIds" item="resourceId" separator=",">
			#{resourceId}
		</foreach>
		)
	</delete>

	<delete id="delUser" parameterType="map">
		DELETE FROM user_role where
		user_id = #{userId} and role_id = #{roleId}
	</delete>

	<select id="findByResource" parameterType="Long" resultMap="BaseResultMap">
		<![CDATA[
		SELECT
		    r.id
		    ,r.role_name
		    ,r.description
		    ,r.created
		    ,r.modified
		FROM role r
		left join role_permission rp on rp.role_id = r.id
		WHERE rp.resource_id=#{pk}
		]]>
	</select>
</mapper>