<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.crm.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.dili.crm.domain.Customer">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="owner_id" jdbcType="BIGINT" property="ownerId" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="certificate_type" jdbcType="VARCHAR" property="certificateType" />
    <result column="certificate_time" jdbcType="TIMESTAMP" property="certificateTime" />
    <result column="certificate_addr" jdbcType="VARCHAR" property="certificateAddr" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="organization_type" jdbcType="VARCHAR" property="organizationType" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="market" jdbcType="VARCHAR" property="market" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="operating_area" jdbcType="VARCHAR" property="operatingArea" />
    <result column="other_title" jdbcType="VARCHAR" property="otherTitle" />
    <result column="main_category" jdbcType="VARCHAR" property="mainCategory" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="created_id" jdbcType="BIGINT" property="createdId" />
    <result column="modified_id" jdbcType="BIGINT" property="modifiedId" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
    <result column="yn" jdbcType="INTEGER" property="yn" />
  </resultMap>
  <resultMap id="CustomerChartResultMap" type="com.dili.crm.domain.dto.CustomerChartDTO">
   
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="market" jdbcType="VARCHAR" property="market" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, parent_id, owner_id, certificate_number, certificate_type, certificate_time, 
    certificate_addr, code, name, sex, nation, phone, organization_type, source, market, 
    type, profession, operating_area, other_title, main_category, notes, created_id, 
    modified_id, created, modified, yn
  </sql>

  <select id="listCustomerFirmPoints" parameterType="java.lang.Long" resultType="map">
    select c.name, c.code, c.organization_type organizationType, c.certificate_type certificateType, c.`type`,c.id,
    c.certificate_number certificateNumber, c.profession, cfp.trading_firm_code tradingFirmCode, cfp.available,
    cfp.buyer_points buyerPoints, cfp.seller_points sellerPoints
    from customer c left join customer_firm_points cfp on c.id = cfp.customer_id
    where c.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectCustomersGroupByType" parameterType="list" resultMap="CustomerChartResultMap">
    select IFNULL(type, '未知') type,count(1) AS `count`
    from customer
    where yn=1
    <if test="list != null and list.size()>0">
     AND market IN
        <foreach collection="list" item="market" open="(" close=")" separator="," >
                #{market}
        </foreach>
 	</if>
    group by type
 </select>
  
   <select id="selectCustomersGroupByMarket" parameterType="list" resultMap="CustomerChartResultMap">
    select market,count(1) AS `count`
    from customer
    where yn=1
    <if test="list != null and list.size()>0">
     AND market IN
        <foreach collection="list" item="market" open="(" close=")" separator="," >
                #{market}
        </foreach>
 	</if>
    group by market
 </select>
  <select id="selectCustomersGroupByProfession" parameterType="list" resultMap="CustomerChartResultMap">
    select IFNULL(profession, '未知') profession,count(1) AS `count`
    from customer
    where yn=1
    <if test="list != null and list.size()>0">
     AND market IN
        <foreach collection="list" item="market" open="(" close=")" separator="," >
                #{market}
        </foreach>
 	</if>
    group by profession
 </select>

  <select id="getParentCustomers" parameterType="long" resultType="string">
    select getParentCustomers(#{id})
  </select>

  <select id="getChildCustomers" parameterType="java.lang.Long" resultMap="BaseResultMap">
    {call getChildCustomers(#{id})}
  </select>

  <select id="getChildCustomerIds" parameterType="java.lang.Long" resultType="string">
    select getChildCustomerIds(#{id})
  </select>

  <select id="selectCustomerAddress" resultType="com.dili.crm.domain.dto.CustomerAddressDto">
    select c.id, c.name,c.type, a.lat, a.lng from customer c, address a where c.id = a.customer_id and a.is_default = 1 and c.yn = 1 and a.lat is not null and a.lng is not null
  </select>

  <!-- 批量用户的父客户为某一客户 -->
  <update id="updateParentIdById" parameterType="map">
      UPDATE customer set parent_id =#{parentId}  where id in
    <foreach collection="ids" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </update>

  <!-- 根据客户ID过滤客户ID数据 -->
  <select id="queryMemberIds"  resultType="long">
    select c.id from customer c where c.id NOT in
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <delete id="deleteWithCascade">
    <!-- 删除客户信息本身 -->
    DELETE from customer where id IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>;
    <!-- 删除客户地址信息 -->
    DELETE from address where customer_id IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>;
    <!-- 删除客户联系人信息 -->
    DELETE from contacts where customer_id IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>;
    <!-- 删除客户车俩信息 -->
    DELETE from vehicle where customer_id IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>;
  </delete>

</mapper>