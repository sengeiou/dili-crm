<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.points.dao.CustomerFirmPointsMapper">
  <resultMap id="BaseResultMap" type="com.dili.points.domain.CustomerFirmPoints">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="yn" jdbcType="INTEGER" property="yn" />
    <result column="trading_firm_code" jdbcType="VARCHAR" property="tradingFirmCode" />
    <result column="available" jdbcType="BIGINT" property="available" />
    <result column="frozen" jdbcType="INTEGER" property="frozen" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="modified_id" jdbcType="BIGINT" property="modifiedId" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="buyer_points" jdbcType="INTEGER" property="buyerPoints" />
    <result column="day_points" jdbcType="INTEGER" property="dayPoints" />
    <result column="reset_time" jdbcType="TIMESTAMP" property="resetTime" />
    <result column="seller_points" jdbcType="INTEGER" property="sellerPoints" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, customer_id, certificate_number, yn, trading_firm_code, available, frozen, total, 
    modified_id, modified, created, buyer_points, day_points, reset_time, seller_points
  </sql>
  <select id="listByPage" parameterType="com.dili.points.domain.dto.CustomerApiDTO" resultType="Map">
    select c.name, c.organization_type organizationType, c.certificate_type certificateType, c.`type`,c.id customerId,
    c.certificate_number certificateNumber, c.profession, cfp.trading_firm_code tradingFirmCode, cfp.available,
    cfp.buyer_points buyerPoints, cfp.seller_points sellerPoints
    from customer_firm_points cfp left join customer c on cfp.customer_id = c.id
    where c.yn = 1
    and cfp.yn = 1
    <if test="name != null and name != ''">
      and c.name like CONCAT('%',#{name},'%')
    </if>
    <if test="certificateNumber != null and certificateNumber != ''">
      and c.certificate_number = #{certificateNumber}
    </if>
    <if test="type != null">
      and c.`type` = #{type}
    </if>
    <if test="profession != null">
      and c.`profession` = #{profession}
    </if>
    <if test="organizationType != null">
      and c.`organization_type` = #{organizationType}
    </if>
    <if test="sort != null and order != null">
      ORDER BY ${sort} ${order}
    </if>

  </select>

</mapper>