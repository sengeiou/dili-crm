<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.points.dao.PointsExchangeRecordMapper">
  <resultMap id="BaseResultMap" type="com.dili.points.domain.PointsExchangeRecord">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="organization_type" jdbcType="VARCHAR" property="organizationType" />
    <result column="certificate_type" jdbcType="VARCHAR" property="certificateType" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="exchange_commodities_id" jdbcType="BIGINT" property="exchangeCommoditiesId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="created_id" jdbcType="BIGINT" property="createdId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, customer_id, certificate_number, organization_type, certificate_type, type, points, 
    exchange_commodities_id, quantity, created, created_id
  </sql>
  <select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from points_exchange_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.points.domain.PointsExchangeRecord">
    <!--
      WARNING - @mbg.generated
    -->
    update points_exchange_record
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="certificateNumber != null">
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="organizationType != null">
        organization_type = #{organizationType,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null">
        certificate_type = #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="exchangeCommoditiesId != null">
        exchange_commodities_id = #{exchangeCommoditiesId,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createdId != null">
        created_id = #{createdId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="statistics" parameterType="com.dili.points.domain.dto.PointsExchangeRecordDTO" resultMap="statisticsMap">
      SELECT SUM(quantity) AS quantity,SUM(points) AS points FROM points_exchange_record
      <where>
        1 = 1
        <if test="name !=null">
          and name like concat('%', #{name}, '%')
        </if>
        <if test="certificateNumber !=null">
          and certificate_number=#{certificateNumber}
        </if>
        <if test="type !=null">
          and type=#{type}
        </if>
        <if test="organizationType != null">
          and organization_type = #{organizationType}
        </if>
        <if test="exchangeCommoditiesId !=null">
          and exchange_commodities_id=#{exchangeCommoditiesId}
        </if>
        <if test="createdStart !=null">
          and created >= #{createdStart}
        </if>
        <if test="createdEnd !=null">
          <![CDATA[
              and created <= #{createdStart}
          ]]>
        </if>
      </where>

  </select>
  
  <resultMap id="statisticsMap" type="java.util.HashMap">
      <result column="quantity" property="quantity" />
      <result column="points" property="points" />
  </resultMap>
</mapper>